#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
"""

import requests
import json

def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API"""
    base_url = "https://lightnovel-backend.onrender.com"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...")
    print(f"URL: {base_url}")
    print("-" * 50)
    
    # –¢–µ—Å—Ç 1: Health check
    try:
        response = requests.get(f"{base_url}/health", timeout=10)
        print(f"‚úÖ Health Check: {response.status_code}")
        if response.status_code == 200:
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå Health Check: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - {e}")
    
    # –¢–µ—Å—Ç 2: Info endpoint
    try:
        response = requests.get(f"{base_url}/info", timeout=10)
        print(f"‚úÖ Info: {response.status_code}")
        if response.status_code == 200:
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå Info: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - {e}")
    
    # –¢–µ—Å—Ç 3: Projects endpoint
    try:
        response = requests.get(f"{base_url}/projects/", timeout=10)
        print(f"‚úÖ Projects: {response.status_code}")
        if response.status_code == 200:
            projects = response.json()
            print(f"   –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(projects)}")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå Projects: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - {e}")
    
    print("-" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    test_api()
