#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π API
"""

import requests
import json
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE_URL = "https://lightnovel-backend.onrender.com"

def test_endpoint(method, endpoint, data=None, expected_status=200):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint"""
    url = f"{API_BASE_URL}{endpoint}"
    
    try:
        if method.upper() == "GET":
            response = requests.get(url)
        elif method.upper() == "POST":
            response = requests.post(url, json=data)
        elif method.upper() == "PUT":
            response = requests.put(url, json=data)
        elif method.upper() == "DELETE":
            response = requests.delete(url)
        else:
            print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥: {method}")
            return False
        
        print(f"{'‚úÖ' if response.status_code == expected_status else '‚ùå'} {method} {endpoint}")
        print(f"   Status: {response.status_code}")
        
        if response.status_code != expected_status:
            print(f"   Error: {response.text}")
        
        return response.status_code == expected_status
        
    except Exception as e:
        print(f"‚ùå {method} {endpoint} - Exception: {e}")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π API")
    print("=" * 60)
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ endpoints
    print("\nüìä –°–∏—Å—Ç–µ–º–Ω—ã–µ endpoints:")
    test_endpoint("GET", "/health")
    test_endpoint("GET", "/info")
    
    # –ü—Ä–æ–µ–∫—Ç—ã
    print("\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:")
    test_endpoint("GET", "/projects/")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
    project_data = {"name": "Test Project All Fixes"}
    test_endpoint("POST", "/projects/", project_data, 201)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã —Å–Ω–æ–≤–∞
    test_endpoint("GET", "/projects/")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤—ã (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1)
    print("\nüìñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤—ã (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1):")
    chapter_data = {
        "title": "Test Chapter All Fixes",
        "original_text": "„ÉÜ„Çπ„Éà„ÉÜ„Ç≠„Çπ„Éà –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
    }
    test_endpoint("POST", "/projects/1/chapters", chapter_data, 201)
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤—ã –ø—Ä–æ–µ–∫—Ç–∞
    test_endpoint("GET", "/projects/1/chapters")
    
    # –ì–ª–æ—Å—Å–∞—Ä–∏–π
    print("\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–æ—Å—Å–∞—Ä–∏—è:")
    test_endpoint("GET", "/glossary/terms/1")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2)
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Ä–º–∏–Ω–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2):")
    term_data = {
        "project_id": 1,
        "source_term": "„ÉÜ„Çπ„Éà",
        "translated_term": "–¢–µ—Å—Ç",
        "category": "other",
        "context": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
    }
    test_endpoint("POST", "/glossary/terms", term_data, 201)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Ä–º–∏–Ω—ã —Å–Ω–æ–≤–∞
    test_endpoint("GET", "/glossary/terms/1")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –≥–ª–∞–≤—ã (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 3)
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –≥–ª–∞–≤—ã (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 3):")
    test_endpoint("POST", "/processing/chapters/1/analyze", {}, 200)
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    print("\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
    test_endpoint("GET", "/glossary/api-usage")
    test_endpoint("GET", "/glossary/cache-stats")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –°–≤–æ–¥–∫–∞ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:")
    print("1. ‚úÖ –£–±—Ä–∞–Ω project_id –∏–∑ ChapterCreate schema")
    print("2. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω project_id –≤ GlossaryTermCreate schema")
    print("3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è project_id –≤ api-tools.html")
    print("4. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω URL –¥–ª—è Swagger docs")
    print("5. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö ID –≤ —Ñ–æ—Ä–º–∞—Ö")
    print("6. ‚úÖ –£–±—Ä–∞–Ω frequency –∏–∑ —Å–æ–∑–¥–∞–Ω–∏—è GlossaryTerm")
    print("7. ‚úÖ –£–ª—É—á—à–µ–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º–∏ —Å–ø–∏—Å–∫–∞–º–∏")
    print("\nüéØ –¢–µ–ø–µ—Ä—å –≤—Å–µ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    main()
