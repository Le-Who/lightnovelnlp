#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API endpoints
"""

import requests
import json
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE_URL = "https://lightnovel-backend.onrender.com"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL

def test_endpoint(method, endpoint, data=None, expected_status=200):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint"""
    url = f"{API_BASE_URL}{endpoint}"
    
    try:
        if method.upper() == "GET":
            response = requests.get(url)
        elif method.upper() == "POST":
            response = requests.post(url, json=data)
        elif method.upper() == "PUT":
            response = requests.put(url, json=data)
        elif method.upper() == "DELETE":
            response = requests.delete(url)
        else:
            print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥: {method}")
            return False
        
        print(f"{'‚úÖ' if response.status_code == expected_status else '‚ùå'} {method} {endpoint}")
        print(f"   Status: {response.status_code}")
        
        if response.status_code != expected_status:
            print(f"   Error: {response.text}")
        
        return response.status_code == expected_status
        
    except Exception as e:
        print(f"‚ùå {method} {endpoint} - Exception: {e}")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints")
    print("=" * 50)
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ endpoints
    print("\nüìä –°–∏—Å—Ç–µ–º–Ω—ã–µ endpoints:")
    test_endpoint("GET", "/health")
    test_endpoint("GET", "/info")
    test_endpoint("GET", "/docs")
    
    # –ü—Ä–æ–µ–∫—Ç—ã
    print("\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:")
    test_endpoint("GET", "/projects/")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
    project_data = {"name": "Test Project API"}
    test_endpoint("POST", "/projects/", project_data, 201)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã —Å–Ω–æ–≤–∞
    test_endpoint("GET", "/projects/")
    
    # –ì–ª–æ—Å—Å–∞—Ä–∏–π
    print("\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–æ—Å—Å–∞—Ä–∏—è:")
    test_endpoint("GET", "/glossary/terms/1")  # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ 1
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω
    term_data = {
        "project_id": 1,
        "source_term": "„ÉÜ„Çπ„Éà",
        "translated_term": "–¢–µ—Å—Ç",
        "category": "other",
        "context": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω"
    }
    test_endpoint("POST", "/glossary/terms", term_data, 201)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Ä–º–∏–Ω—ã —Å–Ω–æ–≤–∞
    test_endpoint("GET", "/glossary/terms/1")
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    print("\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
    test_endpoint("GET", "/glossary/api-usage")
    test_endpoint("GET", "/glossary/cache-stats")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
